title: $:/plugins/Modern.TiddlyDev/doc/tutorials/zh/004-publish
caption: 发布插件
authors: Sttot(Gk0Wk)
type: text/vnd.tiddlywiki

插件是面向用户的，因此你一定需要为你的插件编写使用说明、案例之类的，或者同时为你的用户生成一个可以直接使用的空 wiki 模板。

进一步的，你需要发布你的插件，同时将你编写的文档发布到互联网上——如果能够同步生成一个实时更新的插件库供你的用户订阅，那就更棒了！

达到这样的目的很简单，你只需要在 dev 开发模式下，正常的添加 tiddler 、按安装第三方插件或者装饰和配置 wiki 页面。

随后关闭开发模式，使用 `npm run publish` 指令即可一键构建插件、插件库和文档网页于 dist 文件夹内，进而你就可以将 dist 内的内容发布到你的网络服务器上。

而如果你使用 <$text text="GitHub" /> 并将 <$text text="GitHub" /> Page 作为你的静态页面服务，则不需要手动运行 `npm run publish`，而只需要进行 push 操作，后续步骤将自动执行。而如果你为本次提交添加了 `vX.Y.Z` 形式的 tag，还会同时发布 Release。这些自动化脚本位于 `.github/workdlows` 中，你可自行修改。

@@color:red;font-weight:900;
注意：在每次发布插件时，别忘了在 plugin.info 中更新对应插件的版本！
@@

---

! 建议使用插件库发布你的插件

如果你还不清楚什么是插件库：插件库是 <$text text="TiddlyWiki" /> 提供的一种机制，其本身是一个 tiddler，包含了对这个插件库的描述，以及插件库数据的应的 url，在你打开 [[$:/ControlPanel]] 的 [插件] 并点击 [获取更多插件] 时，<$text text="TiddlyWiki" /> 就会加载所有插件库的数据，让用户能够检索、安装和更新这些插件库所提供的插件。

因此我建议你应当使用插件库发布自己的插件，并要求你的插件使用者安装你的插件库。这样用户就可以在你发布新的插件后自动更新了，也可以借此宣传你的其他插件，因为他们都会在同一个插件库内。

进一步的，欢迎你将你的插件发布在 CPL 上，CPL 是 <$text text="TiddlyWiki" /> 当前最好的公共插件库，类似于 App Store，未来将会被 <$text text="TiddlyWiki" /> 作者 Jermolene [[纳入 TiddlyWiki 内部功能|https://github.com/Jermolene/TiddlyWiki5/pull/7106]]（但是依旧需要时间），CPL集合了非常多各式各样很酷的插件，这样可以使你获得更多的用户量！加入的方法就是直接提[[Issue|https://github.com/tiddly-gittly/TiddlyWiki-CPL/issues]]。

如何创建一个插件库 tiddler：插件库 tiddler 需要携带 `$:/tags/PluginLibrary` tag 并在 url 字段指定插件库 html 文件的位置，可以参考 [[$:/config/TiddlyWiki-CPL/GitHub]]。

! 如果你想发布一个 wiki 模板

<$text text="GitHub" /> Action 脚本使用`npm run publish`，其会将 wiki 发布为线上版本，线上版本为了优化加载时间，将 <$text text="TiddlyWiki" /> 核心 与其他媒体文件都导出在外部，因此 index.html 无法作为单文件 Wiki 使用。如果希望发布 Wiki 模板，请改用 `npm run publish:offline`。
